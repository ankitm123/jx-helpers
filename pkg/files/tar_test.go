//go:build unit
// +build unit

package files

import (
	"os"
	"path/filepath"
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

// Test_UnTargzAll_NestedNoDir tests that util.UnTargzAll is able to extract
// tgz archives where all folders have been removed (as generated by helm)
func Test_UnTargzAll_NestedNoDir(t *testing.T) {
	dir := t.TempDir()

	UnTargzAll("test_data/nested-no-dir.tgz", dir)

	type file struct {
		path    string
		content string
	}
	expected := []file{
		{"dir1/file2.txt", "file2\n"},
		{"dir1/file3.txt", "file3\n"},
		{"dir2/dir3/file4.txt", "file4\n"},
		{"dir2/dir4/file5.txt", "file5\n"},
		{"file1.txt", "file1\n"},
	}
	var found []file

	require.NoError(t, filepath.Walk(dir, func(path string, info os.FileInfo, err error) error {
		if !assert.NoError(t, err) {
			return err
		}
		if info.IsDir() {
			return nil
		}
		name := strings.TrimPrefix(path, dir+"/")
		assert.True(t, info.Mode().IsRegular(), "Non regular file %s", name)
		content, err := os.ReadFile(path)
		if !assert.NoError(t, err, "Error reading file %s", name) {
			return err
		}
		found = append(found, file{name, string(content)})
		return nil
	}))
	require.Equal(t, expected, found, "wrong files extracted")
}
